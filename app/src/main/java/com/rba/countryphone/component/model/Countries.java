package com.rba.countryphone.component.model;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Ricardo Bravo on 17/02/17.
 */

public final class Countries {

    public static final List<CountryEntity> COUNTRIES = new ArrayList<>();
    static {
        COUNTRIES.add(new CountryEntity("af", "Afghanistan (‫افغانستان‬‎)", 93));
        COUNTRIES.add(new CountryEntity("al", "Albania (Shqipëri)", 355));
        COUNTRIES.add(new CountryEntity("dz", "Algeria (‫الجزائر‬‎)", 213));
        COUNTRIES.add(new CountryEntity("as", "American Samoa", 1684));
        COUNTRIES.add(new CountryEntity("ad", "Andorra", 376));
        COUNTRIES.add(new CountryEntity("ao", "Angola", 244));
        COUNTRIES.add(new CountryEntity("ai", "Anguilla", 1264));
        COUNTRIES.add(new CountryEntity("ag", "Antigua and Barbuda", 1268));
        COUNTRIES.add(new CountryEntity("ar", "Argentina", 54));
        COUNTRIES.add(new CountryEntity("am", "Armenia (Հայաստան)", 374));
        COUNTRIES.add(new CountryEntity("aw", "Aruba", 297));
        COUNTRIES.add(new CountryEntity("au", "Australia", 61));
        COUNTRIES.add(new CountryEntity("at", "Austria (Österreich)", 43));
        COUNTRIES.add(new CountryEntity("az", "Azerbaijan (Azərbaycan)", 994));
        COUNTRIES.add(new CountryEntity("bs", "Bahamas", 1242));
        COUNTRIES.add(new CountryEntity("bh", "Bahrain (‫البحرين‬‎)", 973));
        COUNTRIES.add(new CountryEntity("bd", "Bangladesh (বাংলাদেশ)", 880));
        COUNTRIES.add(new CountryEntity("bb", "Barbados", 1246));
        COUNTRIES.add(new CountryEntity("by", "Belarus (Беларусь)", 375));
        COUNTRIES.add(new CountryEntity("be", "Belgium (België)", 32));
        COUNTRIES.add(new CountryEntity("bz", "Belize", 501));
        COUNTRIES.add(new CountryEntity("bj", "Benin (Bénin)", 229));
        COUNTRIES.add(new CountryEntity("bm", "Bermuda", 1441));
        COUNTRIES.add(new CountryEntity("bt", "Bhutan (འབྲུག)", 975));
        COUNTRIES.add(new CountryEntity("bo", "Bolivia", 591));
        COUNTRIES.add(new CountryEntity("ba", "Bosnia and Herzegovina (Босна и Херцеговина)", 387));
        COUNTRIES.add(new CountryEntity("bw", "Botswana", 267));
        COUNTRIES.add(new CountryEntity("br", "Brazil (Brasil)", 55));
        COUNTRIES.add(new CountryEntity("io", "British Indian Ocean Territory", 246));
        COUNTRIES.add(new CountryEntity("vg", "British Virgin Islands", 1284));
        COUNTRIES.add(new CountryEntity("bn", "Brunei", 673));
        COUNTRIES.add(new CountryEntity("bg", "Bulgaria (България)", 359));
        COUNTRIES.add(new CountryEntity("bf", "Burkina Faso", 226));
        COUNTRIES.add(new CountryEntity("bi", "Burundi (Uburundi)", 257));
        COUNTRIES.add(new CountryEntity("kh", "Cambodia (កម្ពុជា)", 855));
        COUNTRIES.add(new CountryEntity("cm", "Cameroon (Cameroun)", 237));
        COUNTRIES.add(new CountryEntity("ca", "Canada", 1));
        COUNTRIES.add(new CountryEntity("cv", "Cape Verde (Kabu Verdi)", 238));
        COUNTRIES.add(new CountryEntity("bq", "Caribbean Netherlands", 599));
        COUNTRIES.add(new CountryEntity("ky", "Cayman Islands", 1345));
        COUNTRIES.add(new CountryEntity("cf", "Central African Republic (République centrafricaine)", 236));
        COUNTRIES.add(new CountryEntity("td", "Chad (Tchad)", 235));
        COUNTRIES.add(new CountryEntity("cl", "Chile", 56));
        COUNTRIES.add(new CountryEntity("cn", "China (中国)", 86));
        COUNTRIES.add(new CountryEntity("cx", "Christmas Island", 61));
        COUNTRIES.add(new CountryEntity("cc", "Cocos (Keeling) Islands", 61));
        COUNTRIES.add(new CountryEntity("co", "Colombia", 57));
        COUNTRIES.add(new CountryEntity("km", "Comoros (‫جزر القمر‬‎)", 269));
        COUNTRIES.add(new CountryEntity("cd", "Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)", 243));
        COUNTRIES.add(new CountryEntity("cg", "Congo (Republic) (Congo-Brazzaville)", 242));
        COUNTRIES.add(new CountryEntity("ck", "Cook Islands", 682));
        COUNTRIES.add(new CountryEntity("cr", "Costa Rica", 506));
        COUNTRIES.add(new CountryEntity("ci", "Côte d’Ivoire", 225));
        COUNTRIES.add(new CountryEntity("hr", "Croatia (Hrvatska)", 385));
        COUNTRIES.add(new CountryEntity("cu", "Cuba", 53));
        COUNTRIES.add(new CountryEntity("cw", "Curaçao", 599));
        COUNTRIES.add(new CountryEntity("cy", "Cyprus (Κύπρος)", 357));
        COUNTRIES.add(new CountryEntity("cz", "Czech Republic (Česká republika)", 420));
        COUNTRIES.add(new CountryEntity("dk", "Denmark (Danmark)", 45));
        COUNTRIES.add(new CountryEntity("dj", "Djibouti", 253));
        COUNTRIES.add(new CountryEntity("dm", "Dominica", 1767));
        COUNTRIES.add(new CountryEntity("do", "Dominican Republic (República Dominicana)", 1));
        COUNTRIES.add(new CountryEntity("ec", "Ecuador", 593));
        COUNTRIES.add(new CountryEntity("eg", "Egypt (‫مصر‬‎)", 20));
        COUNTRIES.add(new CountryEntity("sv", "El Salvador", 503));
        COUNTRIES.add(new CountryEntity("gq", "Equatorial Guinea (Guinea Ecuatorial)", 240));
        COUNTRIES.add(new CountryEntity("er", "Eritrea", 291));
        COUNTRIES.add(new CountryEntity("ee", "Estonia (Eesti)", 372));
        COUNTRIES.add(new CountryEntity("et", "Ethiopia", 251));
        COUNTRIES.add(new CountryEntity("fk", "Falkland Islands (Islas Malvinas)", 500));
        COUNTRIES.add(new CountryEntity("fo", "Faroe Islands (Føroyar)", 298));
        COUNTRIES.add(new CountryEntity("fj", "Fiji", 679));
        COUNTRIES.add(new CountryEntity("fi", "Finland (Suomi)", 358));
        COUNTRIES.add(new CountryEntity("fr", "France", 33));
        COUNTRIES.add(new CountryEntity("gf", "French Guiana (Guyane française)", 594));
        COUNTRIES.add(new CountryEntity("pf", "French Polynesia (Polynésie française)", 689));
        COUNTRIES.add(new CountryEntity("ga", "Gabon", 241));
        COUNTRIES.add(new CountryEntity("gm", "Gambia", 220));
        COUNTRIES.add(new CountryEntity("ge", "Georgia (საქართველო)", 995));
        COUNTRIES.add(new CountryEntity("de", "Germany (Deutschland)", 49));
        COUNTRIES.add(new CountryEntity("gh", "Ghana (Gaana)", 233));
        COUNTRIES.add(new CountryEntity("gi", "Gibraltar", 350));
        COUNTRIES.add(new CountryEntity("gr", "Greece (Ελλάδα)", 30));
        COUNTRIES.add(new CountryEntity("gl", "Greenland (Kalaallit Nunaat)", 299));
        COUNTRIES.add(new CountryEntity("gd", "Grenada", 1473));
        COUNTRIES.add(new CountryEntity("gp", "Guadeloupe", 590));
        COUNTRIES.add(new CountryEntity("gu", "Guam", 1671));
        COUNTRIES.add(new CountryEntity("gt", "Guatemala", 502));
        COUNTRIES.add(new CountryEntity("gg", "Guernsey", 44));
        COUNTRIES.add(new CountryEntity("gn", "Guinea (Guinée)", 224));
        COUNTRIES.add(new CountryEntity("gw", "Guinea-Bissau (Guiné Bissau)", 245));
        COUNTRIES.add(new CountryEntity("gy", "Guyana", 592));
        COUNTRIES.add(new CountryEntity("ht", "Haiti", 509));
        COUNTRIES.add(new CountryEntity("hn", "Honduras", 504));
        COUNTRIES.add(new CountryEntity("hk", "Hong Kong (香港)", 852));
        COUNTRIES.add(new CountryEntity("hu", "Hungary (Magyarország)", 36));
        COUNTRIES.add(new CountryEntity("is", "Iceland (Ísland)", 354));
        COUNTRIES.add(new CountryEntity("in", "India (भारत)", 91));
        COUNTRIES.add(new CountryEntity("id", "Indonesia", 62));
        COUNTRIES.add(new CountryEntity("ir", "Iran (‫ایران‬‎)", 98));
        COUNTRIES.add(new CountryEntity("iq", "Iraq (‫العراق‬‎)", 964));
        COUNTRIES.add(new CountryEntity("ie", "Ireland", 353));
        COUNTRIES.add(new CountryEntity("im", "Isle of Man", 44));
        COUNTRIES.add(new CountryEntity("il", "Israel (‫ישראל‬‎)", 972));
        COUNTRIES.add(new CountryEntity("it", "Italy (Italia)", 39));
        COUNTRIES.add(new CountryEntity("jm", "Jamaica", 1876));
        COUNTRIES.add(new CountryEntity("jp", "Japan (日本)", 81));
        COUNTRIES.add(new CountryEntity("je", "Jersey", 44));
        COUNTRIES.add(new CountryEntity("jo", "Jordan (‫الأردن‬‎)", 962));
        COUNTRIES.add(new CountryEntity("kz", "Kazakhstan (Казахстан)", 7));
        COUNTRIES.add(new CountryEntity("ke", "Kenya", 254));
        COUNTRIES.add(new CountryEntity("ki", "Kiribati", 686));
        COUNTRIES.add(new CountryEntity("kw", "Kuwait (‫الكويت‬‎)", 965));
        COUNTRIES.add(new CountryEntity("kg", "Kyrgyzstan (Кыргызстан)", 996));
        COUNTRIES.add(new CountryEntity("la", "Laos (ລາວ)", 856));
        COUNTRIES.add(new CountryEntity("lv", "Latvia (Latvija)", 371));
        COUNTRIES.add(new CountryEntity("lb", "Lebanon (‫لبنان‬‎)", 961));
        COUNTRIES.add(new CountryEntity("ls", "Lesotho", 266));
        COUNTRIES.add(new CountryEntity("lr", "Liberia", 231));
        COUNTRIES.add(new CountryEntity("ly", "Libya (‫ليبيا‬‎)", 218));
        COUNTRIES.add(new CountryEntity("li", "Liechtenstein", 423));
        COUNTRIES.add(new CountryEntity("lt", "Lithuania (Lietuva)", 370));
        COUNTRIES.add(new CountryEntity("lu", "Luxembourg", 352));
        COUNTRIES.add(new CountryEntity("mo", "Macau (澳門)", 853));
        COUNTRIES.add(new CountryEntity("mk", "Macedonia (FYROM) (Македонија)", 389));
        COUNTRIES.add(new CountryEntity("mg", "Madagascar (Madagasikara)", 261));
        COUNTRIES.add(new CountryEntity("mw", "Malawi", 265));
        COUNTRIES.add(new CountryEntity("my", "Malaysia", 60));
        COUNTRIES.add(new CountryEntity("mv", "Maldives", 960));
        COUNTRIES.add(new CountryEntity("ml", "Mali", 223));
        COUNTRIES.add(new CountryEntity("mt", "Malta", 356));
        COUNTRIES.add(new CountryEntity("mh", "Marshall Islands", 692));
        COUNTRIES.add(new CountryEntity("mq", "Martinique", 596));
        COUNTRIES.add(new CountryEntity("mr", "Mauritania (‫موريتانيا‬‎)", 222));
        COUNTRIES.add(new CountryEntity("mu", "Mauritius (Moris)", 230));
        COUNTRIES.add(new CountryEntity("yt", "Mayotte", 262));
        COUNTRIES.add(new CountryEntity("mx", "Mexico (México)", 52));
        COUNTRIES.add(new CountryEntity("fm", "Micronesia", 691));
        COUNTRIES.add(new CountryEntity("md", "Moldova (Republica Moldova)", 373));
        COUNTRIES.add(new CountryEntity("mc", "Monaco", 377));
        COUNTRIES.add(new CountryEntity("mn", "Mongolia (Монгол)", 976));
        COUNTRIES.add(new CountryEntity("me", "Montenegro (Crna Gora)", 382));
        COUNTRIES.add(new CountryEntity("ms", "Montserrat", 1664));
        COUNTRIES.add(new CountryEntity("ma", "Morocco (‫المغرب‬‎)", 212));
        COUNTRIES.add(new CountryEntity("mz", "Mozambique (Moçambique)", 258));
        COUNTRIES.add(new CountryEntity("mm", "Myanmar (Burma) (မြန်မာ)", 95));
        COUNTRIES.add(new CountryEntity("na", "Namibia (Namibië)", 264));
        COUNTRIES.add(new CountryEntity("nr", "Nauru", 674));
        COUNTRIES.add(new CountryEntity("np", "Nepal (नेपाल)", 977));
        COUNTRIES.add(new CountryEntity("nl", "Netherlands (Nederland)", 31));
        COUNTRIES.add(new CountryEntity("nc", "New Caledonia (Nouvelle-Calédonie)", 687));
        COUNTRIES.add(new CountryEntity("nz", "New Zealand", 64));
        COUNTRIES.add(new CountryEntity("ni", "Nicaragua", 505));
        COUNTRIES.add(new CountryEntity("ne", "Niger (Nijar)", 227));
        COUNTRIES.add(new CountryEntity("ng", "Nigeria", 234));
        COUNTRIES.add(new CountryEntity("nu", "Niue", 683));
        COUNTRIES.add(new CountryEntity("nf", "Norfolk Island", 672));
        COUNTRIES.add(new CountryEntity("kp", "North Korea (조선 민주주의 인민 공화국)", 850));
        COUNTRIES.add(new CountryEntity("mp", "Northern Mariana Islands", 1670));
        COUNTRIES.add(new CountryEntity("no", "Norway (Norge)", 47));
        COUNTRIES.add(new CountryEntity("om", "Oman (‫عُمان‬‎)", 968));
        COUNTRIES.add(new CountryEntity("pk", "Pakistan (‫پاکستان‬‎)", 92));
        COUNTRIES.add(new CountryEntity("pw", "Palau", 680));
        COUNTRIES.add(new CountryEntity("ps", "Palestine (‫فلسطين‬‎)", 970));
        COUNTRIES.add(new CountryEntity("pa", "Panama (Panamá)", 507));
        COUNTRIES.add(new CountryEntity("pg", "Papua New Guinea", 675));
        COUNTRIES.add(new CountryEntity("py", "Paraguay", 595));
        COUNTRIES.add(new CountryEntity("pe", "Peru (Perú)", 51));
        COUNTRIES.add(new CountryEntity("ph", "Philippines", 63));
        COUNTRIES.add(new CountryEntity("pl", "Poland (Polska)", 48));
        COUNTRIES.add(new CountryEntity("pt", "Portugal", 351));
        COUNTRIES.add(new CountryEntity("pr", "Puerto Rico", 1));
        COUNTRIES.add(new CountryEntity("qa", "Qatar (‫قطر‬‎)", 974));
        COUNTRIES.add(new CountryEntity("re", "Réunion (La Réunion)", 262));
        COUNTRIES.add(new CountryEntity("ro", "Romania (România)", 40));
        COUNTRIES.add(new CountryEntity("ru", "Russia (Россия)", 7));
        COUNTRIES.add(new CountryEntity("rw", "Rwanda", 250));
        COUNTRIES.add(new CountryEntity("bl", "Saint Barthélemy (Saint-Barthélemy)", 590));
        COUNTRIES.add(new CountryEntity("sh", "Saint Helena", 290));
        COUNTRIES.add(new CountryEntity("kn", "Saint Kitts and Nevis", 1869));
        COUNTRIES.add(new CountryEntity("lc", "Saint Lucia", 1758));
        COUNTRIES.add(new CountryEntity("mf", "Saint Martin (Saint-Martin (partie française))", 590));
        COUNTRIES.add(new CountryEntity("pm", "Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)", 508));
        COUNTRIES.add(new CountryEntity("vc", "Saint Vincent and the Grenadines", 1784));
        COUNTRIES.add(new CountryEntity("ws", "Samoa", 685));
        COUNTRIES.add(new CountryEntity("sm", "San Marino", 378));
        COUNTRIES.add(new CountryEntity("st", "São Tomé and Príncipe (São Tomé e Príncipe)", 239));
        COUNTRIES.add(new CountryEntity("sa", "Saudi Arabia (‫المملكة العربية السعودية‬‎)", 966));
        COUNTRIES.add(new CountryEntity("sn", "Senegal (Sénégal)", 221));
        COUNTRIES.add(new CountryEntity("rs", "Serbia (Србија)", 381));
        COUNTRIES.add(new CountryEntity("sc", "Seychelles", 248));
        COUNTRIES.add(new CountryEntity("sl", "Sierra Leone", 232));
        COUNTRIES.add(new CountryEntity("sg", "Singapore", 65));
        COUNTRIES.add(new CountryEntity("sx", "Sint Maarten", 1721));
        COUNTRIES.add(new CountryEntity("sk", "Slovakia (Slovensko)", 421));
        COUNTRIES.add(new CountryEntity("si", "Slovenia (Slovenija)", 386));
        COUNTRIES.add(new CountryEntity("sb", "Solomon Islands", 677));
        COUNTRIES.add(new CountryEntity("so", "Somalia (Soomaaliya)", 252));
        COUNTRIES.add(new CountryEntity("za", "South Africa", 27));
        COUNTRIES.add(new CountryEntity("kr", "South Korea (대한민국)", 82));
        COUNTRIES.add(new CountryEntity("ss", "South Sudan (‫جنوب السودان‬‎)", 211));
        COUNTRIES.add(new CountryEntity("es", "Spain (España)", 34));
        COUNTRIES.add(new CountryEntity("lk", "Sri Lanka (ශ්‍රී ලංකාව)", 94));
        COUNTRIES.add(new CountryEntity("sd", "Sudan (‫السودان‬‎)", 249));
        COUNTRIES.add(new CountryEntity("sr", "Suriname", 597));
        COUNTRIES.add(new CountryEntity("sj", "Svalbard and Jan Mayen", 47));
        COUNTRIES.add(new CountryEntity("sz", "Swaziland", 268));
        COUNTRIES.add(new CountryEntity("se", "Sweden (Sverige)", 46));
        COUNTRIES.add(new CountryEntity("ch", "Switzerland (Schweiz)", 41));
        COUNTRIES.add(new CountryEntity("sy", "Syria (‫سوريا‬‎)", 963));
        COUNTRIES.add(new CountryEntity("tw", "Taiwan (台灣)", 886));
        COUNTRIES.add(new CountryEntity("tj", "Tajikistan", 992));
        COUNTRIES.add(new CountryEntity("tz", "Tanzania", 255));
        COUNTRIES.add(new CountryEntity("th", "Thailand (ไทย)", 66));
        COUNTRIES.add(new CountryEntity("tl", "Timor-Leste", 670));
        COUNTRIES.add(new CountryEntity("tg", "Togo", 228));
        COUNTRIES.add(new CountryEntity("tk", "Tokelau", 690));
        COUNTRIES.add(new CountryEntity("to", "Tonga", 676));
        COUNTRIES.add(new CountryEntity("tt", "Trinidad and Tobago", 1868));
        COUNTRIES.add(new CountryEntity("tn", "Tunisia (‫تونس‬‎)", 216));
        COUNTRIES.add(new CountryEntity("tr", "Turkey (Türkiye)", 90));
        COUNTRIES.add(new CountryEntity("tm", "Turkmenistan", 993));
        COUNTRIES.add(new CountryEntity("tc", "Turks and Caicos Islands", 1649));
        COUNTRIES.add(new CountryEntity("tv", "Tuvalu", 688));
        COUNTRIES.add(new CountryEntity("vi", "U.S. Virgin Islands", 1340));
        COUNTRIES.add(new CountryEntity("ug", "Uganda", 256));
        COUNTRIES.add(new CountryEntity("ua", "Ukraine (Україна)", 380));
        COUNTRIES.add(new CountryEntity("ae", "United Arab Emirates (‫الإمارات العربية المتحدة‬‎)", 971));
        COUNTRIES.add(new CountryEntity("gb", "United Kingdom", 44));
        COUNTRIES.add(new CountryEntity("us", "United States", 1));
        COUNTRIES.add(new CountryEntity("uy", "Uruguay", 598));
        COUNTRIES.add(new CountryEntity("uz", "Uzbekistan (Oʻzbekiston)", 998));
        COUNTRIES.add(new CountryEntity("vu", "Vanuatu", 678));
        COUNTRIES.add(new CountryEntity("va", "Vatican City (Città del Vaticano)", 39));
        COUNTRIES.add(new CountryEntity("ve", "Venezuela", 58));
        COUNTRIES.add(new CountryEntity("vn", "Vietnam (Việt Nam)", 84));
        COUNTRIES.add(new CountryEntity("wf", "Wallis and Futuna", 681));
        COUNTRIES.add(new CountryEntity("eh", "Western Sahara (‫الصحراء الغربية‬‎)", 212));
        COUNTRIES.add(new CountryEntity("ye", "Yemen (‫اليمن‬‎)", 967));
        COUNTRIES.add(new CountryEntity("zm", "Zambia", 260));
        COUNTRIES.add(new CountryEntity("zw", "Zimbabwe", 263));
        COUNTRIES.add(new CountryEntity("ax", "Åland Islands", 358));
    }

}
